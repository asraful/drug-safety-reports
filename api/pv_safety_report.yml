openapi: 3.0.0
info:
  title: Drug Safety Reporting API
  version: 1.0.0
paths:
  /reports:
    post:
      summary: Submit a new safety report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reporter_name:
                  type: string
                product_name:
                  type: string
                description:
                  type: string
                timestamp:
                  type: string
                  format: date-time
              required:
                - reporter_name
                - product_name
                - description
                - timestamp
      responses:
        '201':
          description: Report created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  message:
                    type: string
                    example: "Report created successfully"

        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload: Missing required field 'reporter_name'"
    get:
      summary: List safety reports (with optional filtering and sorting)
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - NEW
              - IN_REVIEW
              - CLOSED
          description: Filter reports by status
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - timestamp
          description: Sort reports by a specific field
      responses:
        '200':
          description: A list of safety reports
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    reporter_name:
                      type: string
                    product_name:
                      type: string
                    description:
                      type: string
                    timestamp:
                      type: string
                      format: date-time
                    status:
                      type: string
                      enum:
                        - NEW
                        - IN_REVIEW
                        - CLOSED
  /reports/{report_id}:
    get:
      summary: Fetch report by ID
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
          description: ID of the report to fetch
      responses:
        '200':
          description: Successful retrieval of the report
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  reporter_name:
                    type: string
                  product_name:
                    type: string
                  description:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum:
                      - NEW
                      - IN_REVIEW
                      - CLOSED
        '404':
          description: Report not found